// Default tasks
defaultTasks 'licenseFormatMain', 'licenseFormatTest', 'build', 'shadowJar'

// Apply plugins
apply plugin: 'application'
apply plugin: 'java'
apply plugin: 'license'
apply plugin: 'com.github.johnrengelman.shadow'

// Basic project information
group = 'ecse414.fall2015.group21'
archivesBaseName = 'online-game'
version = '0.0.1-SNAPSHOT'
mainClassName = 'ecse414.fall2015.group21.game.Main'

// Extended project information
ext.projectName = 'Online Game'
ext.inceptionYear = '2015'
ext.currentYear = '2015'
ext.packaging = 'jar'
ext.description = 'Simple online game'
ext.author = 'Group 21'

// Minimum version of Java required
sourceCompatibility = '1.8'
targetCompatibility = '1.8'

// Define variables
ext.buildNumber = project.hasProperty("buildNumber") ? buildNumber : '0'
ext.ciSystem = project.hasProperty("ciSystem") ? ciSystem : 'unknown'
ext.commit = project.hasProperty("commit") ? commit : 'unknown'

// Plugin repositories and dependencies
buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:0.7.0'
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.1'
    }
}

// Non-plugin repositories and dependencies
repositories {
    mavenCentral()
    maven {
        name 'sonatype-nexus'
        url 'https://oss.sonatype.org/content/repositories/public'
    }
}
dependencies {
    compile 'com.flowpowered:caustic-api:1.0.1-SNAPSHOT'
    compile 'com.flowpowered:caustic-lwjgl:1.0.1-SNAPSHOT'
    compile 'org.jbox2d:jbox2d-library:2.2.1.1'
    compile 'com.beust:jcommander:1.48'
    compile 'io.netty:netty-all:4.0.4.Final'
    testCompile 'junit:junit:4.8.2'
}

// Filter, process, and include resources
processResources {
    from(rootProject.rootDir) {
        include 'LICENSE.txt'
    }
}

// License header formatting
import nl.javadude.gradle.plugins.license.License

tasks.withType(License).each { licenseTask ->
    licenseTask.exclude '**/*.frag'
    licenseTask.exclude '**/*.ttf'
    licenseTask.exclude '**/*.vert'
    licenseTask.exclude '**/*.yml'
    licenseTask.exclude '**/*.xml'
}

license {
    ext.name = projectName
    ext.author = author
    ext.year = inceptionYear + '-' + currentYear
    header rootProject.file('HEADER.txt')
    ignoreFailures true
    strictCheck true
    mapping {
        java = 'SLASHSTAR_STYLE'
    }
}

// Source compiler configuration
configure([compileJava, compileTestJava]) {
    options.compilerArgs << '-Xlint:all'
    options.compilerArgs << '-Xlint:-path'
    options.deprecation = true
}

// Include dependencies in final JAR
shadowJar {
    dependencies {
        include dependency('com.flowpowered:caustic-api')
        include dependency('com.flowpowered:caustic-lwjgl')
        include dependency('org.jbox2d:jbox2d-library')
        include dependency('com.beust:jcommander:1.48')
        include dependency('io.netty:netty-all')
    }
}

processResources {
    // Include in final JAR
    from 'LICENSE.txt'
}

// JAR manifest configuration
jar {
    manifest {
        attributes "Main-Class": mainClassName,
            "Built-By": System.properties['user.name'],
            "Created-By": System.properties['java.vm.version'] + " (" + System.properties['java.vm.vendor'] + ")",
            "Implementation-Title": name,
            "Implementation-Version": version + "+" + ciSystem + "-b" + buildNumber + ".git-" + commit
    }
}

run {
    if (project.hasProperty("appArgs")) {
        args Eval.me(appArgs)
    }
}

run {
    standardInput = System.in
}
